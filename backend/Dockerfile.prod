# --- Estágio 1: Build ---
# Usa a imagem completa para instalar todas as dependências de forma robusta
FROM node:22.18.0-alpine AS builder

WORKDIR /usr/src/app

# Copia os manifestos do projeto
COPY package*.json ./

# Instala TODAS as dependências, incluindo devDependencies que podem ser necessárias para algum build step
RUN npm install

# Copia o restante do código da aplicação
COPY . .

# --- Estágio 2: Produção ---
# Começa de uma imagem Node.js limpa e fresca
FROM node:22.18.0-alpine

WORKDIR /usr/src/app

# Copia os manifestos novamente
COPY package*.json ./

# Instala APENAS as dependências de produção. Isso resulta em uma pasta node_modules muito menor.
RUN npm install --omit=dev

# Copia o código da aplicação e os node_modules já instalados do estágio de build
# Isso é mais eficiente do que copiar o código-fonte e reinstalar tudo.
COPY --from=builder /usr/src/app/src ./src
COPY --from=builder /usr/src/app/config ./config
COPY --from=builder /usr/src/app/models ./models
COPY --from=builder /usr/src/app/routes ./routes
COPY --from=builder /usr/src/app/scripts ./scripts
COPY --from=builder /usr/src/app/server.js ./

# Expõe a porta da aplicação
EXPOSE 3001

# Define o usuário para um não-root para maior segurança
USER node

# O comando para iniciar a aplicação em produção.
# Usamos 'node' diretamente, não 'nodemon'.
CMD [ "node", "server.js" ]
